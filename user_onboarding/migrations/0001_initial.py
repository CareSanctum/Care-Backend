# Generated by Django 5.1.6 on 2025-02-25 12:33

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('role', models.CharField(choices=[('USERS', 'Users'), ('USER_KIN', 'User Kin'), ('CARE_MANAGER', 'Care Manager'), ('ADMIN', 'Admin'), ('ENG_TEAM', 'Engineering Team')], default='USERS', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CommunityEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('date', models.DateTimeField()),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('total_registered', models.PositiveIntegerField(default=0)),
                ('registered_users', models.ManyToManyField(blank=True, related_name='community_events', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CurrentMedication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicine_name', models.CharField(blank=True, max_length=255, null=True)),
                ('dosage', models.CharField(blank=True, max_length=100, null=True)),
                ('timing', models.CharField(blank=True, max_length=100, null=True)),
                ('prescribed_by', models.CharField(blank=True, max_length=255, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('stock_remaining', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('current', 'Current'), ('completed', 'Completed')], default='current', max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LabReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(max_length=255)),
                ('test_date', models.DateField()),
                ('LR_file_url', models.URLField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_reports', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MedicalDocuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_url', models.CharField(max_length=500)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('medication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='user_onboarding.currentmedication')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dob', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('full_name', models.CharField(blank=True, max_length=100, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10, null=True)),
                ('address', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('blood_group', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=3, null=True)),
                ('height', models.CharField(blank=True, max_length=10, null=True)),
                ('weight', models.CharField(blank=True, max_length=10, null=True)),
                ('id_proof_url', models.CharField(blank=True, max_length=500, null=True)),
                ('profile_picture_url', models.CharField(blank=True, max_length=500, null=True)),
                ('usual_wake_up_time', models.TimeField(blank=True, null=True)),
                ('current_location_status', models.CharField(blank=True, choices=[('AtHome', 'At Home'), ('Travelling', 'Travelling')], max_length=50, null=True)),
                ('expected_return_date', models.DateField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('alternate_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('pin_code', models.CharField(blank=True, max_length=15, null=True)),
                ('admin', models.OneToOneField(blank=True, limit_choices_to={'role': 'ADMIN'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admin_patient', to=settings.AUTH_USER_MODEL)),
                ('care_manager', models.OneToOneField(blank=True, limit_choices_to={'role': 'CARE_MANAGER'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_patient', to=settings.AUTH_USER_MODEL)),
                ('kin', models.OneToOneField(blank=True, limit_choices_to={'role': 'USER_KIN'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='kin_patient', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='patient_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MedicalHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('existing_health_conditions', models.TextField(blank=True, help_text='List any chronic illnesses', null=True)),
                ('known_allergies', models.TextField(blank=True, help_text='Food, medication, environmental allergies', null=True)),
                ('current_prescriptions_url', models.CharField(blank=True, max_length=500, null=True)),
                ('past_surgeries', models.TextField(blank=True, help_text='Include dates if available', null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_histories', to='user_onboarding.patient')),
            ],
        ),
        migrations.CreateModel(
            name='LifestyleDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_level', models.CharField(blank=True, choices=[('Low', 'Low'), ('Moderate', 'Moderate'), ('High', 'High')], max_length=10, null=True)),
                ('diet_preferences', models.CharField(blank=True, choices=[('Vegetarian', 'Vegetarian'), ('Non-Vegetarian', 'Non-Vegetarian'), ('Vegan', 'Vegan')], max_length=15, null=True)),
                ('requires_mobility_assistance', models.BooleanField(default=False)),
                ('has_vision_impairment', models.BooleanField(default=False)),
                ('has_hearing_impairment', models.BooleanField(default=False)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lifestyle_details', to='user_onboarding.patient')),
            ],
        ),
        migrations.CreateModel(
            name='HealthStatusOverview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_message', models.CharField(default='Your health metrics are within normal range', max_length=255)),
                ('next_checkup_date', models.DateField()),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='health_status_overview', to='user_onboarding.patient')),
            ],
        ),
        migrations.CreateModel(
            name='HealthMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blood_sugar', models.IntegerField(help_text='mg/dL')),
                ('ecg', models.CharField(choices=[('Normal', 'Normal'), ('Abnormal', 'Abnormal')], max_length=20)),
                ('bmi', models.FloatField()),
                ('sleep_level', models.FloatField(help_text='Hours')),
                ('stress_level', models.CharField(choices=[('Low', 'Low'), ('Moderate', 'Moderate'), ('High', 'High')], max_length=20)),
                ('blood_oxygen', models.IntegerField(help_text='Percentage')),
                ('checked_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_metrics', to='user_onboarding.patient')),
            ],
        ),
        migrations.CreateModel(
            name='EmergencyContacts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('next_of_kin_name', models.CharField(max_length=100)),
                ('next_of_kin_contact_number', models.CharField(max_length=15)),
                ('relationship_with_senior', models.CharField(max_length=50)),
                ('neighbor_name', models.CharField(blank=True, max_length=100, null=True)),
                ('neighbor_contact_number', models.CharField(blank=True, max_length=15, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emergency_contacts', to='user_onboarding.patient')),
            ],
        ),
        migrations.CreateModel(
            name='CheckupSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_date', models.DateField()),
                ('status', models.CharField(choices=[('Scheduled', 'Scheduled'), ('Completed', 'Completed'), ('Missed', 'Missed')], max_length=20)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checkup_schedule', to='user_onboarding.patient')),
            ],
        ),
        migrations.CreateModel(
            name='PreferredMedicalServices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_doctor_name', models.CharField(blank=True, max_length=100, null=True)),
                ('doctor_contact_number', models.CharField(blank=True, max_length=15, null=True)),
                ('preferred_hospital_or_clinic', models.CharField(blank=True, max_length=100, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preferred_medical_services', to='user_onboarding.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Presc_file_url', models.URLField()),
                ('doctor_name', models.CharField(max_length=255)),
                ('prescribed_date', models.DateField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ScheduledVisit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit_type', models.CharField(choices=[('care_manager', 'Care Manager'), ('buddy', 'Buddy'), ('doctor', 'Doctor')], max_length=20)),
                ('scheduled_datetime', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('gmeet_link', models.CharField(blank=True, max_length=500, null=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('rescheduled', 'Rescheduled'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_visits', to='user_onboarding.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_number', models.CharField(editable=False, max_length=100, unique=True)),
                ('status', models.CharField(choices=[('OPEN', 'Open'), ('CLOSED', 'Closed')], max_length=10)),
                ('remark', models.CharField(blank=True, choices=[('ESCALATED_TO_ADMIN', 'Escalated to Admin'), ('ESCALATED_TO_CARE_TEAM', 'Escalated to Care Team'), ('ESCALATED_TO_KIN', 'Escalated to Kin')], max_length=50, null=True)),
                ('description', models.TextField()),
                ('date_initiated', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_closed', models.DateTimeField(blank=True, null=True)),
                ('service_name', models.CharField(max_length=100)),
                ('current_work', models.CharField(max_length=200)),
                ('user_assigned', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tickets', to=settings.AUTH_USER_MODEL)),
                ('user_initiated', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='initiated_tickets', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VitalSigns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heart_rate', models.IntegerField()),
                ('blood_pressure', models.CharField(max_length=10)),
                ('respiratory_rate', models.IntegerField()),
                ('temperature', models.FloatField()),
                ('checked_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vital_signs', to='user_onboarding.patient')),
            ],
        ),
    ]
